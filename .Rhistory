library(brms)
fit1 <- brms::brm(cases ~ s(d_comb,bs="ps"),
data = tmpdf,
family = poisson(link="log"))
phe_cases %>%
filter(Area.name==area_name) -> tmpdf
library(dplyr)
phe_cases %>%
filter(Area.name==area_name) -> tmpdf
phe_cases<-readRDS('phe_cases.rds')
download.packages('reticulate')
download('reticulate')
Sys.which('python')
Sys.which('python3')
Sys.which('Python')
remotes::install_github("rstudio/reticulate", upgrade = FALSE)
remove.packages('reticulate')
remotes::install_github("rstudio/reticulate", upgrade = FALSE)
remotes::install_github("rstudio/reticulate", upgrade = FALSE)
library(reticulate)
library(nhanes)
library(NHANES)
install.packages("NHANES")
library(NHANES)
nhanes
nhanes20pl <- NHANES[NHANES$Age>=20,]
numeric_or_not <- data.frame(lapply(nhanes20pl, is.numeric))
numeric_or_not
numeric<-which(numeric_or_not == TRUE)
numeric
nhanes20pl_numeric<-nhanes20pl[numeric]
nhanes20pl_numeric
nhanes20pl_numeric[1,]
nhanes20pl_numeric[,1]
i=2
mean(nhanes20pl_numeric[,i],na.rm = TRUE)
sd(nhanes20pl_numericl[,i], na.rm = TRUE)
sd(nhanes20pl_numeric[,i], na.rm = TRUE)
for(i in 1:ncol(nhanes20pl_numeric)){
summarise(
mean = mean(nhanes20pl_numeric[,i],na.rm = TRUE),
sd = sd(nhanes20pl_numeric[,i], na.rm = TRUE),
variance=var(nhanes20pl_numeric[,i], na.rm = TRUE),
range=range(nhanes20pl_numeric[,i], na.rm = TRUE),
int_range=IQR(nhanes20pl_numeric[,i], na.rm = TRUE))
}
library(summarise)
install.packages(summarise)
library(dplyr)
i=2
summarise(
mean = mean(nhanes20pl_numeric[,i],na.rm = TRUE),
sd = sd(nhanes20pl_numeric[,i], na.rm = TRUE),
variance=var(nhanes20pl_numeric[,i], na.rm = TRUE),
range=range(nhanes20pl_numeric[,i], na.rm = TRUE),
int_range=IQR(nhanes20pl_numeric[,i], na.rm = TRUE))
mean(nhanes20pl_numeric[,i],na.rm = TRUE)
nhanes20pl_numeric[,i]
mean(nhanes20pl_numeric[,i],na.rm = TRUE)
nhanes20pl_numeric[,i] <- as.numeric(nhanes20pl_numeric[,i])
nhanes20pl_numeric[,i] <- as.vector(nhanes20pl_numeric[,i])
summarise(
mean = mean(nhanes20pl_numeric[,i],na.rm = TRUE),
sd = sd(nhanes20pl_numeric[,i], na.rm = TRUE),
variance=var(nhanes20pl_numeric[,i], na.rm = TRUE),
range=range(nhanes20pl_numeric[,i], na.rm = TRUE),
int_range=IQR(nhanes20pl_numeric[,i], na.rm = TRUE))
mean(nhanes20pl_numeric[,i],na.rm = TRUE)
i=1
mean(nhanes20pl_numeric[,i],na.rm = TRUE)
nhanes20pl_numeric<-nhanes20pl[numeric]
nhanes20pl_numeric[,1]
i=1
mean(nhanes20pl_numeric[,i],na.rm = TRUE)
i=1
library(dplyr)
mean(nhanes20pl_numeric[,i],na.rm = TRUE)
nhanes20pl_numeric[,1]
nhanes20pl_numeric[,2]
mean(nhanes20pl_numeric[,2])
numeric_or_not <- data.frame(lapply(nhanes20pl, is.numeric))
numeric
numeric<-which(numeric_or_not == TRUE)
nhanes20pl_numeric<-nhanes20pl[numeric]
mean(nhanes20pl_numeric[,2])
mean(nhanes20pl_numeric[,1])
class(nhanes20pl_numeric[,1])
class(nhanes20pl_numeric[10,1])
nhanes20pl_numeric[,1]
nhanes20pl_numeric[,1][[1]]
nhanes20pl_numeric[,1][]
nhanes20pl_numeric[,1][1]
nhanes20pl_numeric[,1][[1]]
mean(nhanes20pl_numeric[,i][[1]],na.rm = TRUE)
for(i in 1:ncol(nhanes20pl_numeric)){
summarise(
mean = mean(nhanes20pl_numeric[,i][[1]],na.rm = TRUE),
sd = sd(nhanes20pl_numeric[,i][[1]], na.rm = TRUE),
variance=var(nhanes20pl_numeric[,i][[1]], na.rm = TRUE),
range=range(nhanes20pl_numeric[,i][[1]], na.rm = TRUE),
int_range=IQR(nhanes20pl_numeric[,i][[1]], na.rm = TRUE))
}
IQR(nhanes20pl_numeric[,i][[1]], na.rm = TRUE)
range(nhanes20pl_numeric[,i][[1]], na.rm = TRUE)
var(nhanes20pl_numeric[,i][[1]], na.rm = TRUE)
sd(nhanes20pl_numeric[,i][[1]], na.rm = TRUE)
5889*5889
mean(nhanes20pl_numeric[,i][[1]],na.rm = TRUE)
summarise(
mean = mean(nhanes20pl_numeric[,i][[1]],na.rm = TRUE),
sd = sd(nhanes20pl_numeric[,i][[1]], na.rm = TRUE),
variance=var(nhanes20pl_numeric[,i][[1]], na.rm = TRUE),
range=range(nhanes20pl_numeric[,i][[1]], na.rm = TRUE),
int_range=IQR(nhanes20pl_numeric[,i][[1]], na.rm = TRUE))
summaris(nhanes20pl_numeric[,i][[1]],na.rm = TRUE)
summarise(nhanes20pl_numeric[,i][[1]],na.rm = TRUE)
summarise(nhanes20pl_numeric[,i][[1]])
library(survival)
data(veteran)
head(vector())
head(veteran)
veteran$pyears <- veteran$time/365.0
tcuts <- c(0.25, 0.5, 1)
vet_split <- survSplit(Surv(pyears,status) ~ trt, data = veteran,
cut = tcuts, episode = "ftime_group")
vet_split
head(vet_split)
veteran$trt
setwd("~/Documents/R/REACTPackage/reacttemporal2")
setwd("~/Documents/R/REACTPackage")
library(devtools)
install_github("Eales96/reacttemporal2")
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
remove.packages('Rcpp')
library('Rcpp')
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
setwd("~/Documents/R/REACTPackage")
library(devtools)
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
library('reacttemporal2')
remove.packages(reacttemporal2)
R.version
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
setwd("~/Documents/R/REACTPackage")
library(devtools)
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
library(reacttemporal2)
remove.packages('reacttemporal2')
library(reacttemporal2)
remove.packages('reacttemporal2')
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
setwd("~/Documents/R/REACTPackage/reacttemporal2")
library(reacttemporal2)
min_date_r1
knitr::opts_chunk$set(echo = TRUE)
exp_mod_phe_r1 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r1 & phe$date<= max_date_r1,]$date,
Y= phe[phe$date>=min_date_r1 & phe$date<= max_date_r1,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
library(reacttemporal2)
phe <- load_example_phe_data()
library(reacttemporal2)
devtools::load_all(".")
library(reacttemporal2)
library(reacttemporal2)
reacttemporal2::load_example_phe_data()
phe <- load_example_phe_data()
min_date_r1 <- as.Date("2020-05-01")
min_date_r2 <- as.Date("2020-06-19")
min_date_r3 <- as.Date("2020-07-24")
min_date_r4 <- as.Date("2020-08-22")
max_date_r1 <- as.Date("2020-06-01")
max_date_r2 <- as.Date("2020-07-07")
max_date_r3 <- as.Date("2020-08-11")
max_date_r4 <- as.Date("2020-09-08")
exp_mod_phe_r1 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r1 & phe$date<= max_date_r1,]$date,
Y= phe[phe$date>=min_date_r1 & phe$date<= max_date_r1,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r2 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r2 & phe$date<= max_date_r2,]$date,
Y= phe[phe$date>=min_date_r2 & phe$date<= max_date_r2,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r3 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r3 & phe$date<= max_date_r3,]$date,
Y= phe[phe$date>=min_date_r3 & phe$date<= max_date_r3,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r4 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r4 & phe$date<= max_date_r4,]$date,
Y= phe[phe$date>=min_date_r4 & phe$date<= max_date_r4,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r12 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r1 & phe$date<= max_date_r2,]$date,
Y= phe[phe$date>=min_date_r1 & phe$date<= max_date_r2,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r23 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r2 & phe$date<= max_date_r3,]$date,
Y= phe[phe$date>=min_date_r2 & phe$date<= max_date_r3,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r34 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r3 & phe$date<= max_date_r4,]$date,
Y= phe[phe$date>=min_date_r3 & phe$date<= max_date_r4,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
R_estimates_phe_r1 <- exponential_estimate_R(exp_mod_phe_r1, n_mean = 2.29, b_mean =0.36, label ="PHE-Round1")
R_estimates_phe_r2 <- exponential_estimate_R(exp_mod_phe_r2, n_mean = 2.29, b_mean =0.36, label ="PHE-Round2")
R_estimates_phe_r3 <- exponential_estimate_R(exp_mod_phe_r3, n_mean = 2.29, b_mean =0.36, label ="PHE-Round3")
R_estimates_phe_r4 <- exponential_estimate_R(exp_mod_phe_r4, n_mean = 2.29, b_mean =0.36, label ="PHE-Round4")
R_estimates_phe_r12 <- exponential_estimate_R(exp_mod_phe_r12, n_mean = 2.29, b_mean =0.36, label ="PHE-Round1&2")
R_estimates_phe_r23 <- exponential_estimate_R(exp_mod_phe_r23, n_mean = 2.29, b_mean =0.36, label ="PHE-Round2&3")
R_estimates_phe_r34 <- exponential_estimate_R(exp_mod_phe_r34, n_mean = 2.29, b_mean =0.36, label ="PHE-Round3&4")
R_table <- rbind(R_estimates_phe_r1, R_estimates_phe_r2, R_estimates_phe_r3, R_estimates_phe_r4,
R_estimates_phe_r12, R_estimates_phe_r23, R_estimates_phe_r34)
print(R_table)
individual_round_plots <- plot_exp_model_phe(X = phe[phe$date>=min_date_r1 & phe$date<= max_date_r4,]$date,
Y= phe[phe$date>=min_date_r1 & phe$date<= max_date_r4,]$n_cases,
fit_exp = list(exp_mod_phe_r1, exp_mod_phe_r2, exp_mod_phe_r3, exp_mod_phe_r4),
X_model = list(rev(phe[phe$date>=min_date_r1 & phe$date<= max_date_r1,]$date),
rev(phe[phe$date>=min_date_r2 & phe$date<= max_date_r2,]$date),
rev(phe[phe$date>=min_date_r3 & phe$date<= max_date_r3,]$date),
rev(phe[phe$date>=min_date_r4 & phe$date<= max_date_r4,]$date)),
color_list = list("red","red","red","red"),
ylim = 5000.0)
print(individual_round_plots[[1]])
subsequent_round_plots <-  plot_exp_model_phe(X = phe[phe$date>=min_date_r1 & phe$date<= max_date_r4,]$date,
Y= phe[phe$date>=min_date_r1 & phe$date<= max_date_r4,]$n_cases,
fit_exp = list(exp_mod_phe_r12, exp_mod_phe_r23, exp_mod_phe_r34),
X_model = list(rev(phe[phe$date>=min_date_r1 & phe$date<= max_date_r2,]$date),
rev(phe[phe$date>=min_date_r2 & phe$date<= max_date_r3,]$date),
rev(phe[phe$date>=min_date_r3 & phe$date<= max_date_r4,]$date)),
color_list = list("red","blue", "dark green"),
ylim = 5000.0)
print(subsequent_round_plots[[1]])
p_spline_mod_phe <- stan_p_spline_phe(X = phe[phe$date>=min_date_r1 & phe$date<= max_date_r4,]$date,
Y= phe[phe$date>=min_date_r1 & phe$date<= max_date_r4,]$n_cases,
target_dist_between_knots = 5,
spline_degree = 3,
iter = 5000,
warmup = 1000,
cores = 1)
setwd("~/Documents/R/REACTPackage")
library(devtools)
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
install_github("Eales96/reacttemporal2", auth_token = "5e1bc8c43065496e9ff13d3f39a65457415bcc01")
library(reacttemporal2)
knitr::opts_chunk$set(echo = TRUE)
library(reacttemporal2)
library(reacttemporal2)
knitr::opts_chunk$set(echo = TRUE)
library(reacttemporal2)
knitr::opts_chunk$set(echo = TRUE)
library(reacttemporal2)
phe <- load_example_phe_data()
min_date_r1 <- as.Date("2020-05-01")
min_date_r2 <- as.Date("2020-06-19")
min_date_r3 <- as.Date("2020-07-24")
min_date_r4 <- as.Date("2020-08-22")
max_date_r1 <- as.Date("2020-06-01")
max_date_r2 <- as.Date("2020-07-07")
max_date_r3 <- as.Date("2020-08-11")
max_date_r4 <- as.Date("2020-09-08")
exp_mod_phe_r1 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r1 & phe$date<= max_date_r1,]$date,
Y= phe[phe$date>=min_date_r1 & phe$date<= max_date_r1,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r2 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r2 & phe$date<= max_date_r2,]$date,
Y= phe[phe$date>=min_date_r2 & phe$date<= max_date_r2,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r3 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r3 & phe$date<= max_date_r3,]$date,
Y= phe[phe$date>=min_date_r3 & phe$date<= max_date_r3,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r4 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r4 & phe$date<= max_date_r4,]$date,
Y= phe[phe$date>=min_date_r4 & phe$date<= max_date_r4,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r12 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r1 & phe$date<= max_date_r2,]$date,
Y= phe[phe$date>=min_date_r1 & phe$date<= max_date_r2,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r23 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r2 & phe$date<= max_date_r3,]$date,
Y= phe[phe$date>=min_date_r2 & phe$date<= max_date_r3,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
exp_mod_phe_r34 <- stan_exp_model_phe(X = phe[phe$date>=min_date_r3 & phe$date<= max_date_r4,]$date,
Y= phe[phe$date>=min_date_r3 & phe$date<= max_date_r4,]$n_cases,
iter = 5000,
warmup = 500,
cores = 1)
R_estimates_phe_r1 <- exponential_estimate_R(exp_mod_phe_r1, n_mean = 2.29, b_mean =0.36, label ="PHE-Round1")
R_estimates_phe_r2 <- exponential_estimate_R(exp_mod_phe_r2, n_mean = 2.29, b_mean =0.36, label ="PHE-Round2")
R_estimates_phe_r3 <- exponential_estimate_R(exp_mod_phe_r3, n_mean = 2.29, b_mean =0.36, label ="PHE-Round3")
R_estimates_phe_r4 <- exponential_estimate_R(exp_mod_phe_r4, n_mean = 2.29, b_mean =0.36, label ="PHE-Round4")
R_estimates_phe_r12 <- exponential_estimate_R(exp_mod_phe_r12, n_mean = 2.29, b_mean =0.36, label ="PHE-Round1&2")
R_estimates_phe_r23 <- exponential_estimate_R(exp_mod_phe_r23, n_mean = 2.29, b_mean =0.36, label ="PHE-Round2&3")
R_estimates_phe_r34 <- exponential_estimate_R(exp_mod_phe_r34, n_mean = 2.29, b_mean =0.36, label ="PHE-Round3&4")
R_table <- rbind(R_estimates_phe_r1, R_estimates_phe_r2, R_estimates_phe_r3, R_estimates_phe_r4,
R_estimates_phe_r12, R_estimates_phe_r23, R_estimates_phe_r34)
print(R_table)
data(reacttemporal2)
library(reacttemporal2)
library(reacttemporal2)
devtools::install_github('Eales96/reacttemporal2')
library(rstan)
remove.packages(rstan)
remove.packages('rstan')
install.packages(rstan)
install.packages('rstan')
install.packages("rstan")
devtools::install_git('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github("Eales96/reacttemporal2")
devtools::install_github("Eales96/reacttemporal2", INSTALL_opts = "--no-multiarch")
devtools::install_github("Eales96/reacttemporal2", INSTALL_opts = "--no-multiarch")
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2', force=T)
library(Rcpp)
version(Rcpp)
library(RcppParallel)
library(rstan)
library(rstantools)
library(splines)
library(ggplot2)
library(prevalence)
library(BH)
library(RcppEigen)
library(RcppParallel)
library(StanHeaders)
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
install.packages('RcppEigen')
install.packages("RcppEigen")
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
install.packages('glue')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
usethis::browse_github_pat()
R:GITHUB_PAT
R:GITHUB_PAT
usethis::browse_github_pat()
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
install.packages("StanHeaders")
install.packages("vctrs")
install.packages("vctrs")
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
install.packages('testthat')
install.packages("testthat")
install.packages("backport")
install.packages("backports")
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
remove.packages('pkgload')
remove.packages('pkgload')
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
install.packages("pkg_build")
install.packages("pkgbuild")
install.packages("pkgbuild")
install.packages("pkgload")
install.packages('rstudioapi')
install.packages("rstudioapi")
install.packages("rstudioapi")
install.packages("rstudioapi")
install.packages("rstudioapi")
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
install.packages("rprojroot")
install.packages("rprojroot")
install.packages("matrixStats")
install.packages("coda")
install.packages("inline")
install.packages("loo")
install.packages("V8")
devtools::install_github('Eales96/reacttemporal2', auth_token = "05a23fe884d78a9cc9bafd58a708e1ba3e8c6e7e")
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
pkgbuild::with_build_tools(install.packages("rstan", type = "source"))
library(rstan)
devtools::install_github('Eales96/reacttemporal2')
library(reacttemporal2)
install.packages(rstan)
install.packages("rstan")
install.packages("rstan")
install.packages("rstan")
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2', force = T)
devtools::install_github('Eales96/reacttemporal2', force = T)
devtools::install_github('Eales96/reacttemporal2', force = T)
devtools::install_github('Eales96/reacttemporal2', force = T)
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
devtools::install_github('Eales96/reacttemporal2')
